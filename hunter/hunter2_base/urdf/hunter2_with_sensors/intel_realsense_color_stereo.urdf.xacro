<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="intel_realsense_mount" params="prefix topic parent_link">

    <xacro:macro name="intel_realsense" params="
               frame:=realsense          topic:=realsense
               h_fov:=1.5184351666666667 v_fov:=1.0122901111111111
               min_range:=0.105          max_range:=8.0
               width:=640                height:=480
               update_rate:=30
               robot_namespace:=/">

      <!-- this link is the origin for the camera's data -->
      <link name="${frame}" />

      <!--
        The gazebo plugin aligns the depth data with the Z axis, with X=left and Y=up
        ROS expects the depth data along the X axis, with Y=left and Z=up
        This link only exists to give the gazebo plugin the correctly-oriented frame
      -->
      <link name="${frame}_gazebo" />
      <joint name="${frame}_gazebo_joint" type="fixed">
        <parent link="${frame}"/>
        <child link="${frame}_gazebo"/>
        <origin xyz="0.0 0 0" rpy="-1.5707963267948966 0 -1.5707963267948966"/>
      </joint>

      <gazebo reference="${frame}">
        <turnGravityOff>true</turnGravityOff>
        <sensor type="depth" name="${prefix}_realsense_depth">
          <update_rate>${update_rate}</update_rate>
          <camera>
            <!-- 75x65 degree FOV for the depth sensor -->
            <horizontal_fov>${h_fov}</horizontal_fov>
            <vertical_fov>${v_fov}</vertical_fov>

            <image>
              <width>${width}</width>
              <height>${height}</height>
              <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
              <format>RGB_INT8</format>
            </image>
            <clip>
              <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
              <near>0.01</near>
              <far>50.0</far>
            </clip>
          </camera>
          <plugin name="kinect_controller" filename="libgazebo_ros_openni_kinect.so">
            <baseline>0.2</baseline>
            <alwaysOn>true</alwaysOn>
            <updateRate>${update_rate}</updateRate>
            <cameraName>${topic}</cameraName>
            <imageTopicName>color/image_raw</imageTopicName>
            <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
            <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
            <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
            <pointCloudTopicName>depth/color/points</pointCloudTopicName>
            <frameName>${frame}_gazebo</frameName>
            <pointCloudCutoff>${min_range}</pointCloudCutoff>
            <pointCloudCutoffMax>${max_range}</pointCloudCutoffMax>
            <distortionK1>0.00000001</distortionK1>
            <distortionK2>0.00000001</distortionK2>
            <distortionK3>0.00000001</distortionK3>
            <distortionT1>0.00000001</distortionT1>
            <distortionT2>0.00000001</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
          </plugin>
        </sensor>
      </gazebo>

    <!-- added code for color stereo camera-->
    <!-- Stereo Camera Sensor Front Start -->
    <!-- chage camera lens seperation distances to real values -->

    <gazebo reference="${frame}">
        <sensor type="multicamera" name="${prefix}_realsense_stereo">
            <update_rate>30.0</update_rate>
            <camera name="left">
                <pose>0 0.02 0 0 0 0</pose> <!-- x y z r p y -->
              
                <!-- 75x65 degree FOV for the depth sensor -->
                <horizontal_fov>1.5184351666666667</horizontal_fov>
                <vertical_fov>1.0122901111111111</vertical_fov>
                <image>
                    <width>848</width>
                    <height>800</height>
                    <format>R8G8B8</format> <!-- L8 is greysacle use R8G8B8 for color -->
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <camera name="right">
                <pose>0 -0.02 0 0 0 0</pose> <!-- x y z r p y -->
                
                <!-- 75x65 degree FOV for the depth sensor -->
                <horizontal_fov>1.5184351666666667</horizontal_fov>
                <vertical_fov>1.0122901111111111</vertical_fov>
                <image>
                    <width>848</width>
                    <height>800</height>
                    <format>R8G8B8</format> <!-- L8 is greysacle use R8G8B8 for color -->
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>${topic}</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>${frame}_gazebo</frameName>
                <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>
    <!-- added code for color stereo camera-->

    </xacro:macro>

    <link name="${prefix}_realsense_lens">
      <visual>
        <!--
          the model's origin is in the middle & it's rotated to lie in
          the optical standard with X left, Y up, and Z forward
        -->
        <origin xyz="0.0115 0 0.0100" rpy="1.570796 0 1.570796" />
        <geometry>
          <!-- Origin of this mesh is the base of the bracket. -->
          <mesh filename="package://realsense2_description/meshes/d415.stl" />
        </geometry>
        <material name="white" />
      </visual>
    </link>

    <joint type="fixed" name="${prefix}_realsense_lens_joint">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="${parent_link}" />
      <child link="${prefix}_realsense_lens" />
    </joint>
    <joint type="fixed" name="${prefix}_realsense_joint">
      <origin xyz="0.025 0 0" rpy="0 0 0" />
      <parent link="${prefix}_realsense_lens" />
      <child link="${prefix}_realsense" />
    </joint>

    <!-- Stereo Camera Sensor Front End -->

    <xacro:intel_realsense frame="${prefix}_realsense" topic="${topic}"/>
  </xacro:macro>

</robot>
